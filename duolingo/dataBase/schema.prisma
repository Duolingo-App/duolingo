model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  chapters  Chapter[]
  hearts    Heart[]
  score     Score?
}

model Chapter {
  id         Int       @id @default(autoincrement())
  title      String
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
  lessons    Lesson[]
  test       Test?
}

model Lesson {
  id         Int       @id @default(autoincrement())
  title      String
  chapterId  Int
  chapter    Chapter   @relation(fields: [chapterId], references: [id])
  levels     Level[]
  questions  QuestionResponse[]
}

model Level {
  id        Int     @id @default(autoincrement())
  name      String
  lessonId  Int
  lesson    Lesson  @relation(fields: [lessonId], references: [id])
}

model QuestionResponse {
  id        Int     @id @default(autoincrement())
  question  String
  answer    String
  lessonId  Int
  lesson    Lesson  @relation(fields: [lessonId], references: [id])
}

model Heart {
  id      Int    @id @default(autoincrement())
  count   Int
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
}

model Test {
  id         Int                  @id @default(autoincrement())
  name       String
  chapterId  Int
  chapter    Chapter              @relation(fields: [chapterId], references: [id])
  questions  QuestionResponse[]
}

model Score {
  id      Int    @id @default(autoincrement())
  value   Int
  userId  Int    @unique
  user    User   @relation(fields: [userId], references: [id])}